{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Name: Sagnik Chakraborty\n",
    "\n",
    "Course: CSCI S-14A"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "# S-14a: Lab 3\n",
    "\n",
    "## Numpy | Pandas | Sklearn"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Numpy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "NumPy is the fundamental package for scientific computing with Python. It contains among other things:\n",
    "\n",
    "- a powerful N-dimensional array object\n",
    "- sophisticated (broadcasting) functions\n",
    "- tools for integrating C/C++ and Fortran code\n",
    "- useful linear algebra, Fourier transform, and random number capabilities\n",
    "\n",
    "Besides its obvious scientific uses, NumPy can also be used as an efficient multi-dimensional container of generic data. Arbitrary data-types can be defined. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.\n",
    "\n",
    "For more information, check this page: http://www.numpy.org/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load library\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let us explore numpy through examples."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Arrays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3,)\n",
      "1 2 3\n",
      "[5 2 3]\n"
     ]
    }
   ],
   "source": [
    "a = np.array([1, 2, 3])\n",
    "print(a.shape)\n",
    "print(a[0], a[1], a[2])\n",
    "\n",
    "a[0] = 5\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2, 3)\n",
      "1 2 4\n"
     ]
    }
   ],
   "source": [
    "b = np.array([[1, 2, 3], [4, 5, 6]])\n",
    "print(b.shape)\n",
    "print(b[0, 0], b[0, 1], b[1, 0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0. 0.]\n",
      " [0. 0.]]\n"
     ]
    }
   ],
   "source": [
    "a = np.zeros((2, 2))\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1. 1.]]\n"
     ]
    }
   ],
   "source": [
    "b = np.ones((1, 2))\n",
    "print(b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.52832827 0.85358439]\n",
      " [0.75086461 0.59257716]]\n"
     ]
    }
   ],
   "source": [
    "e = np.random.random((2, 2))\n",
    "print(e)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Array indexing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 1  2  3  4]\n",
      " [ 5  6  7  8]\n",
      " [ 9 10 11 12]]\n",
      "2\n"
     ]
    }
   ],
   "source": [
    "a = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\n",
    "print(a)\n",
    "print(a[0, 1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[2 3]\n",
      " [6 7]]\n"
     ]
    }
   ],
   "source": [
    "b = a[:2, 1:3]\n",
    "print(b)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Excercise"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 1  2  3  4]\n",
      " [ 9 10 11 12]]\n",
      "(2, 4)\n"
     ]
    }
   ],
   "source": [
    "a = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\n",
    "z = a[[0, 2], :]\n",
    "print(z)\n",
    "print(z.shape)\n",
    "# print 1st and 3rd row, all columns, and shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[6 7]\n",
      "(2,)\n"
     ]
    }
   ],
   "source": [
    "k = a[1, 1:3]\n",
    "print(k)\n",
    "print(k.shape)\n",
    "# print 2nd row, 2nd and 3rd column, and shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Array math"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 6.  8.]\n",
      " [10. 12.]]\n",
      "[[ 6.  8.]\n",
      " [10. 12.]]\n"
     ]
    }
   ],
   "source": [
    "x = np.array([[1, 2], [3, 4]], dtype=np.float64)\n",
    "y = np.array([[5, 6], [7, 8]], dtype=np.float64)\n",
    "print(x + y)\n",
    "print(np.add(x, y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-4. -4.]\n",
      " [-4. -4.]]\n",
      "[[-4. -4.]\n",
      " [-4. -4.]]\n"
     ]
    }
   ],
   "source": [
    "print(x - y)\n",
    "print(np.subtract(x, y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 5. 12.]\n",
      " [21. 32.]]\n",
      "[[ 5. 12.]\n",
      " [21. 32.]]\n"
     ]
    }
   ],
   "source": [
    "print(x * y)\n",
    "print(np.multiply(x, y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.2        0.33333333]\n",
      " [0.42857143 0.5       ]]\n",
      "[[0.2        0.33333333]\n",
      " [0.42857143 0.5       ]]\n"
     ]
    }
   ],
   "source": [
    "print(x / y)\n",
    "print(np.divide(x, y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1.         1.41421356]\n",
      " [1.73205081 2.        ]]\n"
     ]
    }
   ],
   "source": [
    "print(np.sqrt(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n",
      "[4 6]\n",
      "[3 7]\n"
     ]
    }
   ],
   "source": [
    "x = np.array([[1, 2], [3, 4]])\n",
    "\n",
    "print(np.sum(x))\n",
    "print(np.sum(x, axis=0))\n",
    "print(np.sum(x, axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1 2]\n",
      " [3 4]]\n",
      "[[1 3]\n",
      " [2 4]]\n"
     ]
    }
   ],
   "source": [
    "x = np.array([[1, 2], [3, 4]])\n",
    "print(x)\n",
    "print(x.T)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 2 3]\n",
      "[1 2 3]\n"
     ]
    }
   ],
   "source": [
    "v = np.array([1, 2, 3])\n",
    "print(v)\n",
    "print(v.T)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Broadcasting"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "YOUR TURN: \n",
    "print x, v, and y arrays\n",
    "understand the following cell"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2  2  4]\n",
      " [ 5  5  7]\n",
      " [ 8  8 10]\n",
      " [11 11 13]]\n",
      "[[ 1  2  3]\n",
      " [ 4  5  6]\n",
      " [ 7  8  9]\n",
      " [10 11 12]]\n",
      "[1 0 1]\n"
     ]
    }
   ],
   "source": [
    "x = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])\n",
    "v = np.array([1, 0, 1])\n",
    "y = np.empty_like(x)\n",
    "\n",
    "for i in range(4):\n",
    "    y[i, :] = x[i, :] + v\n",
    "\n",
    "print(y)\n",
    "print(x)\n",
    "print(v)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plotting"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Matplotlib is a Python 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms. Matplotlib can be used in Python scripts, the Python and IPython shells, the Jupyter notebook, web application servers, and four graphical user interface toolkits.\n",
    "\n",
    "Matplotlib tries to make easy things easy and hard things possible. You can generate plots, histograms, power spectra, bar charts, errorcharts, scatterplots, etc., with just a few lines of code. For examples, see the sample plots and thumbnail gallery: https://matplotlib.org/index.html\n",
    "\n",
    "For simple plotting the pyplot module provides a MATLAB-like interface, particularly when combined with IPython. For the power user, you have full control of line styles, font properties, axes properties, etc, via an object oriented interface or via a set of functions familiar to MATLAB users."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "x = np.arange(0, 3 * np.pi, 0.1)\n",
    "y = np.sin(x)\n",
    "\n",
    "plt.plot(x, y)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = np.arange(0, 3 * np.pi, 0.1)\n",
    "y_sin = np.sin(x)\n",
    "y_cos = np.cos(x)\n",
    "\n",
    "plt.plot(x, y_sin)\n",
    "plt.plot(x, y_cos)\n",
    "plt.xlabel('x axis label')\n",
    "plt.ylabel('y axis label')\n",
    "plt.title('Sine and Cosine')\n",
    "plt.legend(['Sine', 'Cosine'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = np.arange(0, 3 * np.pi, 0.1)\n",
    "y_sin = np.sin(x)\n",
    "y_cos = np.cos(x)\n",
    "\n",
    "plt.subplot(2, 1, 1)\n",
    "plt.plot(x, y_sin)\n",
    "plt.title('Sine')\n",
    "\n",
    "plt.subplot(2, 1, 2)\n",
    "plt.plot(x, y_cos)\n",
    "plt.title('Cosine')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pandas"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Pandas is an open source, BSD-licensed library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language.\n",
    "\n",
    "pandas is a NumFOCUS sponsored project. This will help ensure the success of development of pandas as a world-class open-source project, and makes it possible to donate to the project.\n",
    "\n",
    "For more information, check this page: https://pandas.pydata.org/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load library\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import dataset\n",
    "dataset = pd.read_csv(\"Boston_March2018.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MLSNUM</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>LISTPRICE</th>\n",
       "      <th>SOLDPRICE</th>\n",
       "      <th>LISTDATE</th>\n",
       "      <th>SOLDDATE</th>\n",
       "      <th>EXPIREDDATE</th>\n",
       "      <th>DOM</th>\n",
       "      <th>DTO</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>...</th>\n",
       "      <th>COOLING</th>\n",
       "      <th>ELEMENTARYSCHOOL</th>\n",
       "      <th>JUNIORHIGHSCHOOL</th>\n",
       "      <th>HIGHSCHOOL</th>\n",
       "      <th>OTHERFEATURES</th>\n",
       "      <th>PROPTYPE</th>\n",
       "      <th>STREETNAME</th>\n",
       "      <th>HOUSENUM1</th>\n",
       "      <th>HOUSENUM2</th>\n",
       "      <th>PHOTOURL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>72049670</td>\n",
       "      <td>SLD</td>\n",
       "      <td>239900.0</td>\n",
       "      <td>247000.0</td>\n",
       "      <td>8/6/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>295</td>\n",
       "      <td>295</td>\n",
       "      <td>16 Pine St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>MF</td>\n",
       "      <td>Pine St</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72049670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>72056522</td>\n",
       "      <td>SLD</td>\n",
       "      <td>338000.0</td>\n",
       "      <td>338000.0</td>\n",
       "      <td>8/22/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>545</td>\n",
       "      <td>515</td>\n",
       "      <td>80 Cherry Drive</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>CC</td>\n",
       "      <td>Cherry Drive</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72056522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>72080286</td>\n",
       "      <td>SLD</td>\n",
       "      <td>2999999.0</td>\n",
       "      <td>2950000.0</td>\n",
       "      <td>10/12/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>504</td>\n",
       "      <td>493</td>\n",
       "      <td>80 Monadnock Road</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>WPS</td>\n",
       "      <td>WMS</td>\n",
       "      <td>WHS</td>\n",
       "      <td>Basement:Yes;Fireplaces:3;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Monadnock Road</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72080286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>72118879</td>\n",
       "      <td>SLD</td>\n",
       "      <td>2600000.0</td>\n",
       "      <td>2600000.0</td>\n",
       "      <td>2/14/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28</td>\n",
       "      <td>14</td>\n",
       "      <td>15 Trevino Circle</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>West Elementary</td>\n",
       "      <td>West Middle</td>\n",
       "      <td>Andover High</td>\n",
       "      <td>Basement:Yes;Fireplaces:3;Roof:--;Floor:--;App...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Trevino Circle</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72118879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>72124101</td>\n",
       "      <td>SLD</td>\n",
       "      <td>525000.0</td>\n",
       "      <td>525000.0</td>\n",
       "      <td>2/28/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>867</td>\n",
       "      <td>287</td>\n",
       "      <td>53 Maple Ridge Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Northampton</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Maple Ridge Rd</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72124101</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     MLSNUM STATUS  LISTPRICE  SOLDPRICE    LISTDATE  SOLDDATE  EXPIREDDATE  \\\n",
       "0  72049670    SLD   239900.0   247000.0    8/6/2016  3/1/2018          NaN   \n",
       "1  72056522    SLD   338000.0   338000.0   8/22/2016  3/1/2018          NaN   \n",
       "2  72080286    SLD  2999999.0  2950000.0  10/12/2016  3/1/2018          NaN   \n",
       "3  72118879    SLD  2600000.0  2600000.0   2/14/2017  3/1/2018          NaN   \n",
       "4  72124101    SLD   525000.0   525000.0   2/28/2017  3/1/2018          NaN   \n",
       "\n",
       "   DOM  DTO            ADDRESS  \\\n",
       "0  295  295         16 Pine St   \n",
       "1  545  515    80 Cherry Drive   \n",
       "2  504  493  80 Monadnock Road   \n",
       "3   28   14  15 Trevino Circle   \n",
       "4  867  287  53 Maple Ridge Rd   \n",
       "\n",
       "                        ...                        COOLING ELEMENTARYSCHOOL  \\\n",
       "0                       ...                            NaN              NaN   \n",
       "1                       ...                            NaN              NaN   \n",
       "2                       ...                            NaN              WPS   \n",
       "3                       ...                            NaN  West Elementary   \n",
       "4                       ...                            NaN              NaN   \n",
       "\n",
       "   JUNIORHIGHSCHOOL    HIGHSCHOOL  \\\n",
       "0               NaN           NaN   \n",
       "1               NaN           NaN   \n",
       "2               WMS           WHS   \n",
       "3       West Middle  Andover High   \n",
       "4               NaN   Northampton   \n",
       "\n",
       "                                       OTHERFEATURES  PROPTYPE  \\\n",
       "0                                                NaN        MF   \n",
       "1  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        CC   \n",
       "2  Basement:Yes;Fireplaces:3;Roof:Asphalt/Fibergl...        SF   \n",
       "3  Basement:Yes;Fireplaces:3;Roof:--;Floor:--;App...        SF   \n",
       "4  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "\n",
       "       STREETNAME  HOUSENUM1  HOUSENUM2  \\\n",
       "0         Pine St         16         16   \n",
       "1    Cherry Drive         80         80   \n",
       "2  Monadnock Road         80         80   \n",
       "3  Trevino Circle         15         15   \n",
       "4  Maple Ridge Rd         53         53   \n",
       "\n",
       "                                          PHOTOURL  \n",
       "0  http://media.mlspin.com/photo.aspx?mls=72049670  \n",
       "1  http://media.mlspin.com/photo.aspx?mls=72056522  \n",
       "2  http://media.mlspin.com/photo.aspx?mls=72080286  \n",
       "3  http://media.mlspin.com/photo.aspx?mls=72118879  \n",
       "4  http://media.mlspin.com/photo.aspx?mls=72124101  \n",
       "\n",
       "[5 rows x 38 columns]"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['MLSNUM', 'STATUS', 'LISTPRICE', 'SOLDPRICE', 'LISTDATE', 'SOLDDATE',\n",
       "       'EXPIREDDATE', 'DOM', 'DTO', 'ADDRESS', 'CITY', 'STATE', 'ZIP', 'AREA',\n",
       "       'BEDS', 'BATHS', 'SQFT', 'AGE', 'LOTSIZE', 'AGENTNAME', 'OFFICENAME',\n",
       "       'OFFICEPHONE', 'SHOWINGINSTRUCTIONS', 'REMARKS', 'STYLE', 'LEVEL',\n",
       "       'GARAGE', 'HEATING', 'COOLING', 'ELEMENTARYSCHOOL', 'JUNIORHIGHSCHOOL',\n",
       "       'HIGHSCHOOL', 'OTHERFEATURES', 'PROPTYPE', 'STREETNAME', 'HOUSENUM1',\n",
       "       'HOUSENUM2', 'PHOTOURL'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     239900.0\n",
       "1     338000.0\n",
       "2    2999999.0\n",
       "3    2600000.0\n",
       "4     525000.0\n",
       "Name: LISTPRICE, dtype: float64"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.LISTPRICE.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     239900.0\n",
       "1     338000.0\n",
       "2    2999999.0\n",
       "3    2600000.0\n",
       "4     525000.0\n",
       "Name: LISTPRICE, dtype: float64"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset['LISTPRICE'].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LISTPRICE</th>\n",
       "      <th>SOLDPRICE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>239900.0</td>\n",
       "      <td>247000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>338000.0</td>\n",
       "      <td>338000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2999999.0</td>\n",
       "      <td>2950000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2600000.0</td>\n",
       "      <td>2600000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>525000.0</td>\n",
       "      <td>525000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   LISTPRICE  SOLDPRICE\n",
       "0   239900.0   247000.0\n",
       "1   338000.0   338000.0\n",
       "2  2999999.0  2950000.0\n",
       "3  2600000.0  2600000.0\n",
       "4   525000.0   525000.0"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "columns_i_want=['LISTPRICE', 'SOLDPRICE']\n",
    "dataset[columns_i_want].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['MF', 'CC', 'SF'], dtype=object)"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.PROPTYPE.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MLSNUM</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>LISTPRICE</th>\n",
       "      <th>SOLDPRICE</th>\n",
       "      <th>LISTDATE</th>\n",
       "      <th>SOLDDATE</th>\n",
       "      <th>EXPIREDDATE</th>\n",
       "      <th>DOM</th>\n",
       "      <th>DTO</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>...</th>\n",
       "      <th>COOLING</th>\n",
       "      <th>ELEMENTARYSCHOOL</th>\n",
       "      <th>JUNIORHIGHSCHOOL</th>\n",
       "      <th>HIGHSCHOOL</th>\n",
       "      <th>OTHERFEATURES</th>\n",
       "      <th>PROPTYPE</th>\n",
       "      <th>STREETNAME</th>\n",
       "      <th>HOUSENUM1</th>\n",
       "      <th>HOUSENUM2</th>\n",
       "      <th>PHOTOURL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>72049670</td>\n",
       "      <td>SLD</td>\n",
       "      <td>239900.0</td>\n",
       "      <td>247000.0</td>\n",
       "      <td>8/6/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>295</td>\n",
       "      <td>295</td>\n",
       "      <td>16 Pine St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>MF</td>\n",
       "      <td>Pine St</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72049670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>72056522</td>\n",
       "      <td>SLD</td>\n",
       "      <td>338000.0</td>\n",
       "      <td>338000.0</td>\n",
       "      <td>8/22/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>545</td>\n",
       "      <td>515</td>\n",
       "      <td>80 Cherry Drive</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>CC</td>\n",
       "      <td>Cherry Drive</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72056522</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     MLSNUM STATUS  LISTPRICE  SOLDPRICE   LISTDATE  SOLDDATE  EXPIREDDATE  \\\n",
       "0  72049670    SLD   239900.0   247000.0   8/6/2016  3/1/2018          NaN   \n",
       "1  72056522    SLD   338000.0   338000.0  8/22/2016  3/1/2018          NaN   \n",
       "\n",
       "   DOM  DTO          ADDRESS                       ...                         \\\n",
       "0  295  295       16 Pine St                       ...                          \n",
       "1  545  515  80 Cherry Drive                       ...                          \n",
       "\n",
       "  COOLING ELEMENTARYSCHOOL  JUNIORHIGHSCHOOL HIGHSCHOOL  \\\n",
       "0     NaN              NaN               NaN        NaN   \n",
       "1     NaN              NaN               NaN        NaN   \n",
       "\n",
       "                                       OTHERFEATURES  PROPTYPE    STREETNAME  \\\n",
       "0                                                NaN        MF       Pine St   \n",
       "1  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        CC  Cherry Drive   \n",
       "\n",
       "   HOUSENUM1  HOUSENUM2                                         PHOTOURL  \n",
       "0         16         16  http://media.mlspin.com/photo.aspx?mls=72049670  \n",
       "1         80         80  http://media.mlspin.com/photo.aspx?mls=72056522  \n",
       "\n",
       "[2 rows x 38 columns]"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.iloc[:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MLSNUM</th>\n",
       "      <th>STATUS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>72049670</td>\n",
       "      <td>SLD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>72056522</td>\n",
       "      <td>SLD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     MLSNUM STATUS\n",
       "0  72049670    SLD\n",
       "1  72056522    SLD"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.iloc[:2, :2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LISTDATE</th>\n",
       "      <th>SOLDDATE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8/6/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8/22/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10/12/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2/14/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2/28/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     LISTDATE  SOLDDATE\n",
       "0    8/6/2016  3/1/2018\n",
       "1   8/22/2016  3/1/2018\n",
       "2  10/12/2016  3/1/2018\n",
       "3   2/14/2017  3/1/2018\n",
       "4   2/28/2017  3/1/2018"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.iloc[:, 4:6].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        True\n",
       "1        True\n",
       "2       False\n",
       "3       False\n",
       "4        True\n",
       "5        True\n",
       "6        True\n",
       "7        True\n",
       "8       False\n",
       "9        True\n",
       "10       True\n",
       "11       True\n",
       "12      False\n",
       "13      False\n",
       "14      False\n",
       "15       True\n",
       "16      False\n",
       "17       True\n",
       "18       True\n",
       "19       True\n",
       "20       True\n",
       "21       True\n",
       "22       True\n",
       "23       True\n",
       "24       True\n",
       "25       True\n",
       "26       True\n",
       "27       True\n",
       "28       True\n",
       "29       True\n",
       "        ...  \n",
       "5141     True\n",
       "5142     True\n",
       "5143     True\n",
       "5144     True\n",
       "5145     True\n",
       "5146     True\n",
       "5147     True\n",
       "5148     True\n",
       "5149     True\n",
       "5150     True\n",
       "5151    False\n",
       "5152     True\n",
       "5153     True\n",
       "5154     True\n",
       "5155     True\n",
       "5156     True\n",
       "5157     True\n",
       "5158     True\n",
       "5159     True\n",
       "5160     True\n",
       "5161     True\n",
       "5162     True\n",
       "5163     True\n",
       "5164     True\n",
       "5165     True\n",
       "5166     True\n",
       "5167     True\n",
       "5168     True\n",
       "5169     True\n",
       "5170     True\n",
       "Name: SOLDPRICE, Length: 5171, dtype: bool"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.SOLDPRICE < 1000000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MLSNUM</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>LISTPRICE</th>\n",
       "      <th>SOLDPRICE</th>\n",
       "      <th>LISTDATE</th>\n",
       "      <th>SOLDDATE</th>\n",
       "      <th>EXPIREDDATE</th>\n",
       "      <th>DOM</th>\n",
       "      <th>DTO</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>...</th>\n",
       "      <th>COOLING</th>\n",
       "      <th>ELEMENTARYSCHOOL</th>\n",
       "      <th>JUNIORHIGHSCHOOL</th>\n",
       "      <th>HIGHSCHOOL</th>\n",
       "      <th>OTHERFEATURES</th>\n",
       "      <th>PROPTYPE</th>\n",
       "      <th>STREETNAME</th>\n",
       "      <th>HOUSENUM1</th>\n",
       "      <th>HOUSENUM2</th>\n",
       "      <th>PHOTOURL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>72049670</td>\n",
       "      <td>SLD</td>\n",
       "      <td>239900.0</td>\n",
       "      <td>247000.0</td>\n",
       "      <td>8/6/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>295</td>\n",
       "      <td>295</td>\n",
       "      <td>16 Pine St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>MF</td>\n",
       "      <td>Pine St</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72049670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>72056522</td>\n",
       "      <td>SLD</td>\n",
       "      <td>338000.0</td>\n",
       "      <td>338000.0</td>\n",
       "      <td>8/22/2016</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>545</td>\n",
       "      <td>515</td>\n",
       "      <td>80 Cherry Drive</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>CC</td>\n",
       "      <td>Cherry Drive</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72056522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>72124101</td>\n",
       "      <td>SLD</td>\n",
       "      <td>525000.0</td>\n",
       "      <td>525000.0</td>\n",
       "      <td>2/28/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>867</td>\n",
       "      <td>287</td>\n",
       "      <td>53 Maple Ridge Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Northampton</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Maple Ridge Rd</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72124101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>72133120</td>\n",
       "      <td>SLD</td>\n",
       "      <td>468000.0</td>\n",
       "      <td>479000.0</td>\n",
       "      <td>3/20/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>273</td>\n",
       "      <td>273</td>\n",
       "      <td>27 Jennings Way</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Jennings Way</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72133120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>72148511</td>\n",
       "      <td>SLD</td>\n",
       "      <td>209900.0</td>\n",
       "      <td>176505.0</td>\n",
       "      <td>4/19/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>311</td>\n",
       "      <td>287</td>\n",
       "      <td>26 HATHAWAY STREET</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:No;Fireplaces:0;Roof:--;Floor:--;Appl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>HATHAWAY STREET</td>\n",
       "      <td>26</td>\n",
       "      <td>26</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72148511</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     MLSNUM STATUS  LISTPRICE  SOLDPRICE   LISTDATE  SOLDDATE  EXPIREDDATE  \\\n",
       "0  72049670    SLD   239900.0   247000.0   8/6/2016  3/1/2018          NaN   \n",
       "1  72056522    SLD   338000.0   338000.0  8/22/2016  3/1/2018          NaN   \n",
       "4  72124101    SLD   525000.0   525000.0  2/28/2017  3/1/2018          NaN   \n",
       "5  72133120    SLD   468000.0   479000.0  3/20/2017  3/1/2018          NaN   \n",
       "6  72148511    SLD   209900.0   176505.0  4/19/2017  3/1/2018          NaN   \n",
       "\n",
       "   DOM  DTO             ADDRESS  \\\n",
       "0  295  295          16 Pine St   \n",
       "1  545  515     80 Cherry Drive   \n",
       "4  867  287   53 Maple Ridge Rd   \n",
       "5  273  273     27 Jennings Way   \n",
       "6  311  287  26 HATHAWAY STREET   \n",
       "\n",
       "                        ...                        COOLING ELEMENTARYSCHOOL  \\\n",
       "0                       ...                            NaN              NaN   \n",
       "1                       ...                            NaN              NaN   \n",
       "4                       ...                            NaN              NaN   \n",
       "5                       ...                            NaN              NaN   \n",
       "6                       ...                            NaN              NaN   \n",
       "\n",
       "   JUNIORHIGHSCHOOL   HIGHSCHOOL  \\\n",
       "0               NaN          NaN   \n",
       "1               NaN          NaN   \n",
       "4               NaN  Northampton   \n",
       "5               NaN          NaN   \n",
       "6               NaN          NaN   \n",
       "\n",
       "                                       OTHERFEATURES  PROPTYPE  \\\n",
       "0                                                NaN        MF   \n",
       "1  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        CC   \n",
       "4  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "6  Basement:No;Fireplaces:0;Roof:--;Floor:--;Appl...        SF   \n",
       "\n",
       "        STREETNAME  HOUSENUM1  HOUSENUM2  \\\n",
       "0          Pine St         16         16   \n",
       "1     Cherry Drive         80         80   \n",
       "4   Maple Ridge Rd         53         53   \n",
       "5     Jennings Way         27         27   \n",
       "6  HATHAWAY STREET         26         26   \n",
       "\n",
       "                                          PHOTOURL  \n",
       "0  http://media.mlspin.com/photo.aspx?mls=72049670  \n",
       "1  http://media.mlspin.com/photo.aspx?mls=72056522  \n",
       "4  http://media.mlspin.com/photo.aspx?mls=72124101  \n",
       "5  http://media.mlspin.com/photo.aspx?mls=72133120  \n",
       "6  http://media.mlspin.com/photo.aspx?mls=72148511  \n",
       "\n",
       "[5 rows x 38 columns]"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset[dataset.SOLDPRICE < 1000000].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2464492263.65, 476598.7746374008)"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.sum(dataset.SOLDPRICE), np.mean(dataset.SOLDPRICE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MLSNUM</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>LISTPRICE</th>\n",
       "      <th>SOLDPRICE</th>\n",
       "      <th>LISTDATE</th>\n",
       "      <th>SOLDDATE</th>\n",
       "      <th>EXPIREDDATE</th>\n",
       "      <th>DOM</th>\n",
       "      <th>DTO</th>\n",
       "      <th>ADDRESS</th>\n",
       "      <th>...</th>\n",
       "      <th>COOLING</th>\n",
       "      <th>ELEMENTARYSCHOOL</th>\n",
       "      <th>JUNIORHIGHSCHOOL</th>\n",
       "      <th>HIGHSCHOOL</th>\n",
       "      <th>OTHERFEATURES</th>\n",
       "      <th>PROPTYPE</th>\n",
       "      <th>STREETNAME</th>\n",
       "      <th>HOUSENUM1</th>\n",
       "      <th>HOUSENUM2</th>\n",
       "      <th>PHOTOURL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>72124101</td>\n",
       "      <td>SLD</td>\n",
       "      <td>525000.0</td>\n",
       "      <td>525000.0</td>\n",
       "      <td>2/28/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>867</td>\n",
       "      <td>287</td>\n",
       "      <td>53 Maple Ridge Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Northampton</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Maple Ridge Rd</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72124101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>72133120</td>\n",
       "      <td>SLD</td>\n",
       "      <td>468000.0</td>\n",
       "      <td>479000.0</td>\n",
       "      <td>3/20/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>273</td>\n",
       "      <td>273</td>\n",
       "      <td>27 Jennings Way</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Jennings Way</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72133120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>72148511</td>\n",
       "      <td>SLD</td>\n",
       "      <td>209900.0</td>\n",
       "      <td>176505.0</td>\n",
       "      <td>4/19/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>311</td>\n",
       "      <td>287</td>\n",
       "      <td>26 HATHAWAY STREET</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:No;Fireplaces:0;Roof:--;Floor:--;Appl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>HATHAWAY STREET</td>\n",
       "      <td>26</td>\n",
       "      <td>26</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72148511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>72153413</td>\n",
       "      <td>SLD</td>\n",
       "      <td>549900.0</td>\n",
       "      <td>530000.0</td>\n",
       "      <td>4/26/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>261</td>\n",
       "      <td>261</td>\n",
       "      <td>9 Sheffield Place</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Sheffield Place</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72153413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>72166889</td>\n",
       "      <td>SLD</td>\n",
       "      <td>130000.0</td>\n",
       "      <td>130000.0</td>\n",
       "      <td>5/16/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>185</td>\n",
       "      <td>185</td>\n",
       "      <td>88 Marcelle St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Marcelle St</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72166889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>72166942</td>\n",
       "      <td>SLD</td>\n",
       "      <td>1150000.0</td>\n",
       "      <td>945000.0</td>\n",
       "      <td>5/18/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>194</td>\n",
       "      <td>194</td>\n",
       "      <td>84 Jerusalem Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Osgood/DeerHill</td>\n",
       "      <td>Cohasset Middle</td>\n",
       "      <td>Cohasset High</td>\n",
       "      <td>Basement:No;Fireplaces:2;Roof:--;Floor:Tile, W...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Jerusalem Rd</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72166942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>72171751</td>\n",
       "      <td>SLD</td>\n",
       "      <td>234900.0</td>\n",
       "      <td>229900.0</td>\n",
       "      <td>5/28/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>246</td>\n",
       "      <td>225</td>\n",
       "      <td>67 Elmwood Ave</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Center</td>\n",
       "      <td>Williams</td>\n",
       "      <td>LHS</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Elmwood Ave</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72171751</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>72190912</td>\n",
       "      <td>SLD</td>\n",
       "      <td>245900.0</td>\n",
       "      <td>215000.0</td>\n",
       "      <td>6/29/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>111</td>\n",
       "      <td>95</td>\n",
       "      <td>17 King Philip Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>King Philip Rd</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72190912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>72193127</td>\n",
       "      <td>SLD</td>\n",
       "      <td>475000.0</td>\n",
       "      <td>475000.0</td>\n",
       "      <td>7/5/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>185</td>\n",
       "      <td>170</td>\n",
       "      <td>2 Chestnut St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Page</td>\n",
       "      <td>Pentucket</td>\n",
       "      <td>Pentucket</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Chestnut St</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72193127</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>72193631</td>\n",
       "      <td>SLD</td>\n",
       "      <td>484900.0</td>\n",
       "      <td>480000.0</td>\n",
       "      <td>7/6/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>133</td>\n",
       "      <td>119</td>\n",
       "      <td>6 Juniper Ln</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Peasley</td>\n",
       "      <td>Melican</td>\n",
       "      <td>Algonquin</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Juniper Ln</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72193631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>72195162</td>\n",
       "      <td>SLD</td>\n",
       "      <td>499000.0</td>\n",
       "      <td>480000.0</td>\n",
       "      <td>7/10/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>312</td>\n",
       "      <td>169</td>\n",
       "      <td>27 Shoreline Way</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:No;Fireplaces:2;Roof:Asphalt/Fibergla...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Shoreline Way</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72195162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>72201730</td>\n",
       "      <td>SLD</td>\n",
       "      <td>549000.0</td>\n",
       "      <td>549000.0</td>\n",
       "      <td>7/21/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>83</td>\n",
       "      <td>67</td>\n",
       "      <td>52 Main Street</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cole/Spofford</td>\n",
       "      <td>Masconomet</td>\n",
       "      <td>Masconomet</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Main Street</td>\n",
       "      <td>52</td>\n",
       "      <td>52</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72201730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>72202830</td>\n",
       "      <td>SLD</td>\n",
       "      <td>569900.0</td>\n",
       "      <td>500000.0</td>\n",
       "      <td>7/24/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>201</td>\n",
       "      <td>168</td>\n",
       "      <td>4 Sias Point Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Sias Point Rd</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72202830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>72208801</td>\n",
       "      <td>SLD</td>\n",
       "      <td>889000.0</td>\n",
       "      <td>860000.0</td>\n",
       "      <td>8/4/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>110</td>\n",
       "      <td>96</td>\n",
       "      <td>6 Meeting Place Cir</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cole/Spofford</td>\n",
       "      <td>Masconomet 7-8</td>\n",
       "      <td>Masconomet 9-12</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Meeting Place Cir</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72208801</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>72209314</td>\n",
       "      <td>SLD</td>\n",
       "      <td>635000.0</td>\n",
       "      <td>630000.0</td>\n",
       "      <td>8/5/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>163</td>\n",
       "      <td>149</td>\n",
       "      <td>38 Verna Hall Drive</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Verna Hall Drive</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72209314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>72209351</td>\n",
       "      <td>SLD</td>\n",
       "      <td>779900.0</td>\n",
       "      <td>779900.0</td>\n",
       "      <td>8/5/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>167</td>\n",
       "      <td>152</td>\n",
       "      <td>73 Woburn St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>South</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Woburn St</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72209351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>72214138</td>\n",
       "      <td>SLD</td>\n",
       "      <td>325000.0</td>\n",
       "      <td>315000.0</td>\n",
       "      <td>8/15/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>157</td>\n",
       "      <td>140</td>\n",
       "      <td>40 Gibbs Ave</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Wareham</td>\n",
       "      <td>WMS</td>\n",
       "      <td>WHS</td>\n",
       "      <td>Basement:Yes;Fireplaces:7;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Gibbs Ave</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72214138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>72218526</td>\n",
       "      <td>SLD</td>\n",
       "      <td>950000.0</td>\n",
       "      <td>893000.0</td>\n",
       "      <td>8/24/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>146</td>\n",
       "      <td>132</td>\n",
       "      <td>3 Bounty Lane</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Falmouth</td>\n",
       "      <td>Falmouth</td>\n",
       "      <td>Falmouth</td>\n",
       "      <td>Basement:Yes;Fireplaces:2;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Bounty Lane</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72218526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>72222613</td>\n",
       "      <td>SLD</td>\n",
       "      <td>294900.0</td>\n",
       "      <td>270000.0</td>\n",
       "      <td>9/1/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52</td>\n",
       "      <td>52</td>\n",
       "      <td>3863 ACUSHNET AVE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>ACUSHNET AVE</td>\n",
       "      <td>3863</td>\n",
       "      <td>3863</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72222613</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>72223668</td>\n",
       "      <td>SLD</td>\n",
       "      <td>350000.0</td>\n",
       "      <td>350000.0</td>\n",
       "      <td>9/6/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>166</td>\n",
       "      <td>150</td>\n",
       "      <td>262 Grove St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Clinton Elem</td>\n",
       "      <td>Clinton Middle</td>\n",
       "      <td>Clinton HS</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Grove St</td>\n",
       "      <td>262</td>\n",
       "      <td>262</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72223668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>72223950</td>\n",
       "      <td>SLD</td>\n",
       "      <td>128900.0</td>\n",
       "      <td>123100.0</td>\n",
       "      <td>9/6/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>149</td>\n",
       "      <td>133</td>\n",
       "      <td>128 Phoenix Ter</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Liberty</td>\n",
       "      <td>Van Sickle</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Phoenix Ter</td>\n",
       "      <td>128</td>\n",
       "      <td>128</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72223950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>72225332</td>\n",
       "      <td>SLD</td>\n",
       "      <td>329900.0</td>\n",
       "      <td>309000.0</td>\n",
       "      <td>9/7/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>152</td>\n",
       "      <td>138</td>\n",
       "      <td>36 Cooper Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Burgess</td>\n",
       "      <td>Tantasqua Jr Hi</td>\n",
       "      <td>Tantasqua Sr Hi</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Cooper Rd</td>\n",
       "      <td>36</td>\n",
       "      <td>36</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72225332</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>72225677</td>\n",
       "      <td>SLD</td>\n",
       "      <td>425000.0</td>\n",
       "      <td>400000.0</td>\n",
       "      <td>9/1/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>176</td>\n",
       "      <td>176</td>\n",
       "      <td>40 Katie Ford Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Katie Ford Rd</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72225677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>72226124</td>\n",
       "      <td>SLD</td>\n",
       "      <td>214900.0</td>\n",
       "      <td>205000.0</td>\n",
       "      <td>9/9/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>98</td>\n",
       "      <td>85</td>\n",
       "      <td>5 Perry St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Perry St</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72226124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>72227043</td>\n",
       "      <td>SLD</td>\n",
       "      <td>234900.0</td>\n",
       "      <td>228900.0</td>\n",
       "      <td>9/12/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>127</td>\n",
       "      <td>127</td>\n",
       "      <td>35 Maggie Ln</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Maggie Ln</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72227043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>72227923</td>\n",
       "      <td>SLD</td>\n",
       "      <td>899900.0</td>\n",
       "      <td>875000.0</td>\n",
       "      <td>9/13/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>112</td>\n",
       "      <td>91</td>\n",
       "      <td>30 Park View Dr</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Foster</td>\n",
       "      <td>Hingham Middle</td>\n",
       "      <td>Hingham High</td>\n",
       "      <td>Basement:Yes;Fireplaces:2;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Park View Dr</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72227923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>72228467</td>\n",
       "      <td>SLD</td>\n",
       "      <td>559900.0</td>\n",
       "      <td>559900.0</td>\n",
       "      <td>9/13/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>264R Main street</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Composi...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Main street</td>\n",
       "      <td>264</td>\n",
       "      <td>264R</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72228467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>72229218</td>\n",
       "      <td>SLD</td>\n",
       "      <td>575000.0</td>\n",
       "      <td>540000.0</td>\n",
       "      <td>9/13/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>134</td>\n",
       "      <td>120</td>\n",
       "      <td>17 Ellisville Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Ellisville Rd</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72229218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>72229987</td>\n",
       "      <td>SLD</td>\n",
       "      <td>950000.0</td>\n",
       "      <td>850000.0</td>\n",
       "      <td>9/16/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>464</td>\n",
       "      <td>165</td>\n",
       "      <td>29 Pine Ridge Rd.</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:3;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Pine Ridge Rd.</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72229987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>72232572</td>\n",
       "      <td>SLD</td>\n",
       "      <td>509900.0</td>\n",
       "      <td>505000.0</td>\n",
       "      <td>9/21/2017</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47</td>\n",
       "      <td>33</td>\n",
       "      <td>29 Roosevelt Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Greenlodge</td>\n",
       "      <td>Dedham</td>\n",
       "      <td>Dedham</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Roosevelt Rd</td>\n",
       "      <td>29</td>\n",
       "      <td>29</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72232572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5121</th>\n",
       "      <td>72286830</td>\n",
       "      <td>SLD</td>\n",
       "      <td>449900.0</td>\n",
       "      <td>516000.0</td>\n",
       "      <td>2/28/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17</td>\n",
       "      <td>6</td>\n",
       "      <td>107 Greenwood St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>greenwood</td>\n",
       "      <td>galvin</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Greenwood St</td>\n",
       "      <td>107</td>\n",
       "      <td>107</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72286830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5122</th>\n",
       "      <td>72286934</td>\n",
       "      <td>SLD</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>245000.0</td>\n",
       "      <td>2/28/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "      <td>1 Porter Street</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Deerfield K-6</td>\n",
       "      <td>Frontier 7-8</td>\n",
       "      <td>Frontier 9-12</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Porter Street</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72286934</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5124</th>\n",
       "      <td>72287266</td>\n",
       "      <td>SLD</td>\n",
       "      <td>238500.0</td>\n",
       "      <td>242000.0</td>\n",
       "      <td>2/20/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39</td>\n",
       "      <td>8</td>\n",
       "      <td>7 Camden Street</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Camden Street</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72287266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5127</th>\n",
       "      <td>72287584</td>\n",
       "      <td>SLD</td>\n",
       "      <td>379900.0</td>\n",
       "      <td>400000.0</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>186 Lake Shore Drive</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Lake Shore Drive</td>\n",
       "      <td>186</td>\n",
       "      <td>186</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72287584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5130</th>\n",
       "      <td>72287681</td>\n",
       "      <td>SLD</td>\n",
       "      <td>538000.0</td>\n",
       "      <td>552000.0</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19</td>\n",
       "      <td>4</td>\n",
       "      <td>21 Driscoll Drive</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:2;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Driscoll Drive</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72287681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5131</th>\n",
       "      <td>72287703</td>\n",
       "      <td>SLD</td>\n",
       "      <td>509900.0</td>\n",
       "      <td>538000.0</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17</td>\n",
       "      <td>3</td>\n",
       "      <td>24 Sherman Ct</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Medford High</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Sherman Ct</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72287703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5132</th>\n",
       "      <td>72287706</td>\n",
       "      <td>SLD</td>\n",
       "      <td>499999.0</td>\n",
       "      <td>480000.0</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>3/28/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "      <td>3</td>\n",
       "      <td>142 Wadsworth Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Chandler/Alden</td>\n",
       "      <td>MS</td>\n",
       "      <td>DHS</td>\n",
       "      <td>Basement:Yes;Fireplaces:2;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Wadsworth Rd</td>\n",
       "      <td>142</td>\n",
       "      <td>142</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72287706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5134</th>\n",
       "      <td>72287921</td>\n",
       "      <td>SLD</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>210000.0</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>3/28/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15</td>\n",
       "      <td>7</td>\n",
       "      <td>46 Plain St.</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>GIBBONS</td>\n",
       "      <td>STOUGHTON</td>\n",
       "      <td>STOUGHTON</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Plain St.</td>\n",
       "      <td>46</td>\n",
       "      <td>46</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72287921</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5137</th>\n",
       "      <td>72287993</td>\n",
       "      <td>SLD</td>\n",
       "      <td>335000.0</td>\n",
       "      <td>340000.0</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15</td>\n",
       "      <td>4</td>\n",
       "      <td>151 Wrentham Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Wrentham Rd</td>\n",
       "      <td>151</td>\n",
       "      <td>151</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72287993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5139</th>\n",
       "      <td>72288059</td>\n",
       "      <td>SLD</td>\n",
       "      <td>749000.0</td>\n",
       "      <td>700000.0</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16</td>\n",
       "      <td>2</td>\n",
       "      <td>52 Oak</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TBD</td>\n",
       "      <td>WMS</td>\n",
       "      <td>WHS</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Oak</td>\n",
       "      <td>52</td>\n",
       "      <td>52</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72288059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5140</th>\n",
       "      <td>72288158</td>\n",
       "      <td>SLD</td>\n",
       "      <td>349000.0</td>\n",
       "      <td>360000.0</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>5 Johnswood Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BPS</td>\n",
       "      <td>BPS</td>\n",
       "      <td>BPS</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:--;Floor:Hardwo...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Johnswood Rd</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72288158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5142</th>\n",
       "      <td>72288259</td>\n",
       "      <td>SLD</td>\n",
       "      <td>329900.0</td>\n",
       "      <td>327500.0</td>\n",
       "      <td>3/2/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17</td>\n",
       "      <td>2</td>\n",
       "      <td>40 Brandon Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Brandon Rd</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72288259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5143</th>\n",
       "      <td>72288267</td>\n",
       "      <td>SLD</td>\n",
       "      <td>584900.0</td>\n",
       "      <td>585000.0</td>\n",
       "      <td>3/1/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>135</td>\n",
       "      <td>2</td>\n",
       "      <td>19 Wilmington Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Pine Glen</td>\n",
       "      <td>Marshall Simond</td>\n",
       "      <td>BHS</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Wilmington Rd</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72288267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5146</th>\n",
       "      <td>72289152</td>\n",
       "      <td>SLD</td>\n",
       "      <td>449900.0</td>\n",
       "      <td>430000.0</td>\n",
       "      <td>3/5/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19</td>\n",
       "      <td>4</td>\n",
       "      <td>55 Beechmont St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Slate;Floor:Har...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Beechmont St</td>\n",
       "      <td>55</td>\n",
       "      <td>55</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72289152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5148</th>\n",
       "      <td>72289694</td>\n",
       "      <td>SLD</td>\n",
       "      <td>299700.0</td>\n",
       "      <td>286500.0</td>\n",
       "      <td>3/6/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>4</td>\n",
       "      <td>3759 Acushnet Ave</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Acushnet Ave</td>\n",
       "      <td>3759</td>\n",
       "      <td>3759</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72289694</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5149</th>\n",
       "      <td>72289734</td>\n",
       "      <td>SLD</td>\n",
       "      <td>275000.0</td>\n",
       "      <td>248000.0</td>\n",
       "      <td>3/6/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14</td>\n",
       "      <td>3</td>\n",
       "      <td>63 Sunset Ave</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>MacDonald</td>\n",
       "      <td>Howard</td>\n",
       "      <td>WB M/S High</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Sunset Ave</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72289734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5150</th>\n",
       "      <td>72289771</td>\n",
       "      <td>SLD</td>\n",
       "      <td>415000.0</td>\n",
       "      <td>415000.0</td>\n",
       "      <td>3/6/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17</td>\n",
       "      <td>2</td>\n",
       "      <td>16 Old Essex Road</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Memorial</td>\n",
       "      <td>MERMS</td>\n",
       "      <td>MERHS</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Old Essex Road</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72289771</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5152</th>\n",
       "      <td>72290016</td>\n",
       "      <td>SLD</td>\n",
       "      <td>69900.0</td>\n",
       "      <td>58000.0</td>\n",
       "      <td>3/6/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>30-32 River</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Old Mill</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Palmer</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>River</td>\n",
       "      <td>3032</td>\n",
       "      <td>30-32</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72290016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5158</th>\n",
       "      <td>72291553</td>\n",
       "      <td>SLD</td>\n",
       "      <td>419000.0</td>\n",
       "      <td>430000.0</td>\n",
       "      <td>3/9/2018</td>\n",
       "      <td>3/28/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>279 Washington St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:--;Floor:Wall t...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Washington St</td>\n",
       "      <td>279</td>\n",
       "      <td>279</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72291553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5159</th>\n",
       "      <td>72291758</td>\n",
       "      <td>SLD</td>\n",
       "      <td>319900.0</td>\n",
       "      <td>300000.0</td>\n",
       "      <td>3/9/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16</td>\n",
       "      <td>2</td>\n",
       "      <td>456 Hill St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:--;Floor:Lamina...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Hill St</td>\n",
       "      <td>456</td>\n",
       "      <td>456</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72291758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5160</th>\n",
       "      <td>72291778</td>\n",
       "      <td>SLD</td>\n",
       "      <td>269900.0</td>\n",
       "      <td>275000.0</td>\n",
       "      <td>3/8/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>66 Andover Street</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Carroll School</td>\n",
       "      <td>Higgins Middle</td>\n",
       "      <td>Veteran Mem.</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Andover Street</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72291778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5162</th>\n",
       "      <td>72292089</td>\n",
       "      <td>SLD</td>\n",
       "      <td>349900.0</td>\n",
       "      <td>345000.0</td>\n",
       "      <td>3/11/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>5613 Riverboat Circle SW</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:No;Fireplaces:0;Roof:Asphalt/Fibergla...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Riverboat Circle SW</td>\n",
       "      <td>5613</td>\n",
       "      <td>5613</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72292089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5163</th>\n",
       "      <td>72292935</td>\n",
       "      <td>SLD</td>\n",
       "      <td>444900.0</td>\n",
       "      <td>500750.0</td>\n",
       "      <td>3/13/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19 Brigham Farm Lane</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Brigham Farm Lane</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72292935</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5164</th>\n",
       "      <td>72293858</td>\n",
       "      <td>SLD</td>\n",
       "      <td>705000.0</td>\n",
       "      <td>802000.0</td>\n",
       "      <td>3/8/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>40 Cameron Way</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Cameron Way</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72293858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5165</th>\n",
       "      <td>72294290</td>\n",
       "      <td>SLD</td>\n",
       "      <td>495000.0</td>\n",
       "      <td>473500.0</td>\n",
       "      <td>3/16/2018</td>\n",
       "      <td>3/28/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>280</td>\n",
       "      <td>0</td>\n",
       "      <td>321 Center St</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:3;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Center St</td>\n",
       "      <td>321</td>\n",
       "      <td>321</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72294290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5166</th>\n",
       "      <td>72297021</td>\n",
       "      <td>SLD</td>\n",
       "      <td>549860.0</td>\n",
       "      <td>549860.0</td>\n",
       "      <td>3/21/2018</td>\n",
       "      <td>3/28/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>55 Goldfinch Drive</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:--;Floor:--;App...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Goldfinch Drive</td>\n",
       "      <td>55</td>\n",
       "      <td>55</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72297021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5167</th>\n",
       "      <td>72298565</td>\n",
       "      <td>SLD</td>\n",
       "      <td>97500.0</td>\n",
       "      <td>135000.0</td>\n",
       "      <td>3/26/2018</td>\n",
       "      <td>3/28/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15 Wood Path</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>J.R. Briggs</td>\n",
       "      <td>Overlook</td>\n",
       "      <td>Oakmont</td>\n",
       "      <td>Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Wood Path</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72298565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5168</th>\n",
       "      <td>72298853</td>\n",
       "      <td>SLD</td>\n",
       "      <td>675000.0</td>\n",
       "      <td>616500.0</td>\n",
       "      <td>3/27/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>373 Bay Lane</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Bay Lane</td>\n",
       "      <td>373</td>\n",
       "      <td>373</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72298853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5169</th>\n",
       "      <td>72299954</td>\n",
       "      <td>SLD</td>\n",
       "      <td>369900.0</td>\n",
       "      <td>369000.0</td>\n",
       "      <td>3/22/2018</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>17 Rounsevell Dr</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Rounsevell Dr</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72299954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5170</th>\n",
       "      <td>72301673</td>\n",
       "      <td>SLD</td>\n",
       "      <td>459800.0</td>\n",
       "      <td>455000.0</td>\n",
       "      <td>3/29/2018</td>\n",
       "      <td>3/30/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>17 Pondview Rd</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...</td>\n",
       "      <td>SF</td>\n",
       "      <td>Pondview Rd</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>http://media.mlspin.com/photo.aspx?mls=72301673</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3073 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        MLSNUM STATUS  LISTPRICE  SOLDPRICE   LISTDATE   SOLDDATE  \\\n",
       "4     72124101    SLD   525000.0   525000.0  2/28/2017   3/1/2018   \n",
       "5     72133120    SLD   468000.0   479000.0  3/20/2017   3/1/2018   \n",
       "6     72148511    SLD   209900.0   176505.0  4/19/2017   3/1/2018   \n",
       "7     72153413    SLD   549900.0   530000.0  4/26/2017   3/1/2018   \n",
       "9     72166889    SLD   130000.0   130000.0  5/16/2017   3/1/2018   \n",
       "10    72166942    SLD  1150000.0   945000.0  5/18/2017   3/1/2018   \n",
       "11    72171751    SLD   234900.0   229900.0  5/28/2017   3/1/2018   \n",
       "15    72190912    SLD   245900.0   215000.0  6/29/2017   3/1/2018   \n",
       "18    72193127    SLD   475000.0   475000.0   7/5/2017   3/1/2018   \n",
       "19    72193631    SLD   484900.0   480000.0   7/6/2017   3/1/2018   \n",
       "20    72195162    SLD   499000.0   480000.0  7/10/2017   3/1/2018   \n",
       "23    72201730    SLD   549000.0   549000.0  7/21/2017   3/1/2018   \n",
       "24    72202830    SLD   569900.0   500000.0  7/24/2017   3/1/2018   \n",
       "28    72208801    SLD   889000.0   860000.0   8/4/2017   3/1/2018   \n",
       "29    72209314    SLD   635000.0   630000.0   8/5/2017   3/1/2018   \n",
       "30    72209351    SLD   779900.0   779900.0   8/5/2017   3/1/2018   \n",
       "33    72214138    SLD   325000.0   315000.0  8/15/2017   3/1/2018   \n",
       "35    72218526    SLD   950000.0   893000.0  8/24/2017   3/1/2018   \n",
       "39    72222613    SLD   294900.0   270000.0   9/1/2017   3/1/2018   \n",
       "40    72223668    SLD   350000.0   350000.0   9/6/2017   3/1/2018   \n",
       "41    72223950    SLD   128900.0   123100.0   9/6/2017   3/1/2018   \n",
       "44    72225332    SLD   329900.0   309000.0   9/7/2017   3/1/2018   \n",
       "45    72225677    SLD   425000.0   400000.0   9/1/2017   3/1/2018   \n",
       "46    72226124    SLD   214900.0   205000.0   9/9/2017   3/1/2018   \n",
       "47    72227043    SLD   234900.0   228900.0  9/12/2017   3/1/2018   \n",
       "48    72227923    SLD   899900.0   875000.0  9/13/2017   3/1/2018   \n",
       "49    72228467    SLD   559900.0   559900.0  9/13/2017   3/1/2018   \n",
       "51    72229218    SLD   575000.0   540000.0  9/13/2017   3/1/2018   \n",
       "52    72229987    SLD   950000.0   850000.0  9/16/2017   3/1/2018   \n",
       "54    72232572    SLD   509900.0   505000.0  9/21/2017   3/1/2018   \n",
       "...        ...    ...        ...        ...        ...        ...   \n",
       "5121  72286830    SLD   449900.0   516000.0  2/28/2018  3/29/2018   \n",
       "5122  72286934    SLD   250000.0   245000.0  2/28/2018  3/30/2018   \n",
       "5124  72287266    SLD   238500.0   242000.0  2/20/2018  3/30/2018   \n",
       "5127  72287584    SLD   379900.0   400000.0   3/1/2018  3/30/2018   \n",
       "5130  72287681    SLD   538000.0   552000.0   3/1/2018  3/30/2018   \n",
       "5131  72287703    SLD   509900.0   538000.0   3/1/2018  3/30/2018   \n",
       "5132  72287706    SLD   499999.0   480000.0   3/1/2018  3/28/2018   \n",
       "5134  72287921    SLD   250000.0   210000.0   3/1/2018  3/28/2018   \n",
       "5137  72287993    SLD   335000.0   340000.0   3/1/2018  3/30/2018   \n",
       "5139  72288059    SLD   749000.0   700000.0   3/1/2018  3/30/2018   \n",
       "5140  72288158    SLD   349000.0   360000.0   3/1/2018  3/29/2018   \n",
       "5142  72288259    SLD   329900.0   327500.0   3/2/2018  3/29/2018   \n",
       "5143  72288267    SLD   584900.0   585000.0   3/1/2018  3/30/2018   \n",
       "5146  72289152    SLD   449900.0   430000.0   3/5/2018  3/30/2018   \n",
       "5148  72289694    SLD   299700.0   286500.0   3/6/2018  3/29/2018   \n",
       "5149  72289734    SLD   275000.0   248000.0   3/6/2018  3/29/2018   \n",
       "5150  72289771    SLD   415000.0   415000.0   3/6/2018  3/29/2018   \n",
       "5152  72290016    SLD    69900.0    58000.0   3/6/2018  3/29/2018   \n",
       "5158  72291553    SLD   419000.0   430000.0   3/9/2018  3/28/2018   \n",
       "5159  72291758    SLD   319900.0   300000.0   3/9/2018  3/29/2018   \n",
       "5160  72291778    SLD   269900.0   275000.0   3/8/2018  3/30/2018   \n",
       "5162  72292089    SLD   349900.0   345000.0  3/11/2018  3/29/2018   \n",
       "5163  72292935    SLD   444900.0   500750.0  3/13/2018  3/29/2018   \n",
       "5164  72293858    SLD   705000.0   802000.0   3/8/2018  3/30/2018   \n",
       "5165  72294290    SLD   495000.0   473500.0  3/16/2018  3/28/2018   \n",
       "5166  72297021    SLD   549860.0   549860.0  3/21/2018  3/28/2018   \n",
       "5167  72298565    SLD    97500.0   135000.0  3/26/2018  3/28/2018   \n",
       "5168  72298853    SLD   675000.0   616500.0  3/27/2018  3/30/2018   \n",
       "5169  72299954    SLD   369900.0   369000.0  3/22/2018  3/29/2018   \n",
       "5170  72301673    SLD   459800.0   455000.0  3/29/2018  3/30/2018   \n",
       "\n",
       "      EXPIREDDATE  DOM  DTO                   ADDRESS  \\\n",
       "4             NaN  867  287         53 Maple Ridge Rd   \n",
       "5             NaN  273  273           27 Jennings Way   \n",
       "6             NaN  311  287        26 HATHAWAY STREET   \n",
       "7             NaN  261  261         9 Sheffield Place   \n",
       "9             NaN  185  185            88 Marcelle St   \n",
       "10            NaN  194  194           84 Jerusalem Rd   \n",
       "11            NaN  246  225            67 Elmwood Ave   \n",
       "15            NaN  111   95         17 King Philip Rd   \n",
       "18            NaN  185  170             2 Chestnut St   \n",
       "19            NaN  133  119              6 Juniper Ln   \n",
       "20            NaN  312  169          27 Shoreline Way   \n",
       "23            NaN   83   67            52 Main Street   \n",
       "24            NaN  201  168           4 Sias Point Rd   \n",
       "28            NaN  110   96       6 Meeting Place Cir   \n",
       "29            NaN  163  149       38 Verna Hall Drive   \n",
       "30            NaN  167  152              73 Woburn St   \n",
       "33            NaN  157  140              40 Gibbs Ave   \n",
       "35            NaN  146  132             3 Bounty Lane   \n",
       "39            NaN   52   52         3863 ACUSHNET AVE   \n",
       "40            NaN  166  150              262 Grove St   \n",
       "41            NaN  149  133           128 Phoenix Ter   \n",
       "44            NaN  152  138              36 Cooper Rd   \n",
       "45            NaN  176  176          40 Katie Ford Rd   \n",
       "46            NaN   98   85                5 Perry St   \n",
       "47            NaN  127  127              35 Maggie Ln   \n",
       "48            NaN  112   91           30 Park View Dr   \n",
       "49            NaN   43   43          264R Main street   \n",
       "51            NaN  134  120          17 Ellisville Rd   \n",
       "52            NaN  464  165         29 Pine Ridge Rd.   \n",
       "54            NaN   47   33           29 Roosevelt Rd   \n",
       "...           ...  ...  ...                       ...   \n",
       "5121          NaN   17    6          107 Greenwood St   \n",
       "5122          NaN   19    3           1 Porter Street   \n",
       "5124          NaN   39    8           7 Camden Street   \n",
       "5127          NaN    5    5      186 Lake Shore Drive   \n",
       "5130          NaN   19    4         21 Driscoll Drive   \n",
       "5131          NaN   17    3             24 Sherman Ct   \n",
       "5132          NaN   20    3          142 Wadsworth Rd   \n",
       "5134          NaN   15    7              46 Plain St.   \n",
       "5137          NaN   15    4           151 Wrentham Rd   \n",
       "5139          NaN   16    2                    52 Oak   \n",
       "5140          NaN   10    4            5 Johnswood Rd   \n",
       "5142          NaN   17    2             40 Brandon Rd   \n",
       "5143          NaN  135    2          19 Wilmington Rd   \n",
       "5146          NaN   19    4           55 Beechmont St   \n",
       "5148          NaN   22    4         3759 Acushnet Ave   \n",
       "5149          NaN   14    3             63 Sunset Ave   \n",
       "5150          NaN   17    2         16 Old Essex Road   \n",
       "5152          NaN   13    0               30-32 River   \n",
       "5158          NaN    9    5         279 Washington St   \n",
       "5159          NaN   16    2               456 Hill St   \n",
       "5160          NaN    6    6         66 Andover Street   \n",
       "5162          NaN   18   18  5613 Riverboat Circle SW   \n",
       "5163          NaN    0    0      19 Brigham Farm Lane   \n",
       "5164          NaN   12   12            40 Cameron Way   \n",
       "5165          NaN  280    0             321 Center St   \n",
       "5166          NaN    1    1        55 Goldfinch Drive   \n",
       "5167          NaN    0    0              15 Wood Path   \n",
       "5168          NaN    2    2              373 Bay Lane   \n",
       "5169          NaN    7    4          17 Rounsevell Dr   \n",
       "5170          NaN    5    0            17 Pondview Rd   \n",
       "\n",
       "                           ...                        COOLING  \\\n",
       "4                          ...                            NaN   \n",
       "5                          ...                            NaN   \n",
       "6                          ...                            NaN   \n",
       "7                          ...                            NaN   \n",
       "9                          ...                            NaN   \n",
       "10                         ...                            NaN   \n",
       "11                         ...                            NaN   \n",
       "15                         ...                            NaN   \n",
       "18                         ...                            NaN   \n",
       "19                         ...                            NaN   \n",
       "20                         ...                            NaN   \n",
       "23                         ...                            NaN   \n",
       "24                         ...                            NaN   \n",
       "28                         ...                            NaN   \n",
       "29                         ...                            NaN   \n",
       "30                         ...                            NaN   \n",
       "33                         ...                            NaN   \n",
       "35                         ...                            NaN   \n",
       "39                         ...                            NaN   \n",
       "40                         ...                            NaN   \n",
       "41                         ...                            NaN   \n",
       "44                         ...                            NaN   \n",
       "45                         ...                            NaN   \n",
       "46                         ...                            NaN   \n",
       "47                         ...                            NaN   \n",
       "48                         ...                            NaN   \n",
       "49                         ...                            NaN   \n",
       "51                         ...                            NaN   \n",
       "52                         ...                            NaN   \n",
       "54                         ...                            NaN   \n",
       "...                        ...                            ...   \n",
       "5121                       ...                            NaN   \n",
       "5122                       ...                            NaN   \n",
       "5124                       ...                            NaN   \n",
       "5127                       ...                            NaN   \n",
       "5130                       ...                            NaN   \n",
       "5131                       ...                            NaN   \n",
       "5132                       ...                            NaN   \n",
       "5134                       ...                            NaN   \n",
       "5137                       ...                            NaN   \n",
       "5139                       ...                            NaN   \n",
       "5140                       ...                            NaN   \n",
       "5142                       ...                            NaN   \n",
       "5143                       ...                            NaN   \n",
       "5146                       ...                            NaN   \n",
       "5148                       ...                            NaN   \n",
       "5149                       ...                            NaN   \n",
       "5150                       ...                            NaN   \n",
       "5152                       ...                            NaN   \n",
       "5158                       ...                            NaN   \n",
       "5159                       ...                            NaN   \n",
       "5160                       ...                            NaN   \n",
       "5162                       ...                            NaN   \n",
       "5163                       ...                            NaN   \n",
       "5164                       ...                            NaN   \n",
       "5165                       ...                            NaN   \n",
       "5166                       ...                            NaN   \n",
       "5167                       ...                            NaN   \n",
       "5168                       ...                            NaN   \n",
       "5169                       ...                            NaN   \n",
       "5170                       ...                            NaN   \n",
       "\n",
       "     ELEMENTARYSCHOOL  JUNIORHIGHSCHOOL       HIGHSCHOOL  \\\n",
       "4                 NaN               NaN      Northampton   \n",
       "5                 NaN               NaN              NaN   \n",
       "6                 NaN               NaN              NaN   \n",
       "7                 NaN               NaN              NaN   \n",
       "9                 NaN               NaN              NaN   \n",
       "10    Osgood/DeerHill   Cohasset Middle    Cohasset High   \n",
       "11             Center          Williams              LHS   \n",
       "15                NaN               NaN              NaN   \n",
       "18               Page         Pentucket        Pentucket   \n",
       "19            Peasley           Melican        Algonquin   \n",
       "20                NaN               NaN              NaN   \n",
       "23      Cole/Spofford        Masconomet       Masconomet   \n",
       "24                NaN               NaN              NaN   \n",
       "28      Cole/Spofford    Masconomet 7-8  Masconomet 9-12   \n",
       "29                NaN               NaN              NaN   \n",
       "30              South               NaN              NaN   \n",
       "33            Wareham               WMS              WHS   \n",
       "35           Falmouth          Falmouth         Falmouth   \n",
       "39                NaN               NaN              NaN   \n",
       "40       Clinton Elem    Clinton Middle       Clinton HS   \n",
       "41            Liberty        Van Sickle              NaN   \n",
       "44            Burgess   Tantasqua Jr Hi  Tantasqua Sr Hi   \n",
       "45                NaN               NaN              NaN   \n",
       "46                NaN               NaN              NaN   \n",
       "47                NaN               NaN              NaN   \n",
       "48             Foster    Hingham Middle     Hingham High   \n",
       "49                NaN               NaN              NaN   \n",
       "51                NaN               NaN              NaN   \n",
       "52                NaN               NaN              NaN   \n",
       "54         Greenlodge            Dedham           Dedham   \n",
       "...               ...               ...              ...   \n",
       "5121        greenwood            galvin              NaN   \n",
       "5122    Deerfield K-6      Frontier 7-8    Frontier 9-12   \n",
       "5124              NaN               NaN              NaN   \n",
       "5127              NaN               NaN              NaN   \n",
       "5130              NaN               NaN              NaN   \n",
       "5131              NaN               NaN     Medford High   \n",
       "5132   Chandler/Alden                MS              DHS   \n",
       "5134          GIBBONS         STOUGHTON        STOUGHTON   \n",
       "5137              NaN               NaN              NaN   \n",
       "5139              TBD               WMS              WHS   \n",
       "5140              BPS               BPS              BPS   \n",
       "5142              NaN               NaN              NaN   \n",
       "5143        Pine Glen   Marshall Simond              BHS   \n",
       "5146              NaN               NaN              NaN   \n",
       "5148              NaN               NaN              NaN   \n",
       "5149        MacDonald            Howard      WB M/S High   \n",
       "5150         Memorial             MERMS            MERHS   \n",
       "5152         Old Mill               NaN           Palmer   \n",
       "5158              NaN               NaN              NaN   \n",
       "5159              NaN               NaN              NaN   \n",
       "5160   Carroll School    Higgins Middle     Veteran Mem.   \n",
       "5162              NaN               NaN              NaN   \n",
       "5163              NaN               NaN              NaN   \n",
       "5164              NaN               NaN              NaN   \n",
       "5165              NaN               NaN              NaN   \n",
       "5166              NaN               NaN              NaN   \n",
       "5167      J.R. Briggs          Overlook          Oakmont   \n",
       "5168              NaN               NaN              NaN   \n",
       "5169              NaN               NaN              NaN   \n",
       "5170              NaN               NaN              NaN   \n",
       "\n",
       "                                          OTHERFEATURES  PROPTYPE  \\\n",
       "4     Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5     Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "6     Basement:No;Fireplaces:0;Roof:--;Floor:--;Appl...        SF   \n",
       "7     Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "9     Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "10    Basement:No;Fireplaces:2;Roof:--;Floor:Tile, W...        SF   \n",
       "11    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "15    Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "18    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "19    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "20    Basement:No;Fireplaces:2;Roof:Asphalt/Fibergla...        SF   \n",
       "23    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "24    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "28    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "29    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "30    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "33    Basement:Yes;Fireplaces:7;Roof:Asphalt/Fibergl...        SF   \n",
       "35    Basement:Yes;Fireplaces:2;Roof:Asphalt/Fibergl...        SF   \n",
       "39    Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "40    Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "41    Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "44    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "45    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "46    Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "47    Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "48    Basement:Yes;Fireplaces:2;Roof:Asphalt/Fibergl...        SF   \n",
       "49    Basement:Yes;Fireplaces:1;Roof:Asphalt/Composi...        SF   \n",
       "51    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "52    Basement:Yes;Fireplaces:3;Roof:Asphalt/Fibergl...        SF   \n",
       "54    Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "...                                                 ...       ...   \n",
       "5121  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5122  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5124  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "5127  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5130  Basement:Yes;Fireplaces:2;Roof:Asphalt/Fibergl...        SF   \n",
       "5131  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5132  Basement:Yes;Fireplaces:2;Roof:Asphalt/Fibergl...        SF   \n",
       "5134  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "5137  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5139  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "5140  Basement:Yes;Fireplaces:0;Roof:--;Floor:Hardwo...        SF   \n",
       "5142  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5143  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "5146  Basement:Yes;Fireplaces:1;Roof:Slate;Floor:Har...        SF   \n",
       "5148  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5149  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "5150  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "5152  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "5158  Basement:Yes;Fireplaces:0;Roof:--;Floor:Wall t...        SF   \n",
       "5159  Basement:Yes;Fireplaces:1;Roof:--;Floor:Lamina...        SF   \n",
       "5160  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "5162  Basement:No;Fireplaces:0;Roof:Asphalt/Fibergla...        SF   \n",
       "5163  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5164  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5165  Basement:Yes;Fireplaces:3;Roof:Asphalt/Fibergl...        SF   \n",
       "5166  Basement:Yes;Fireplaces:1;Roof:--;Floor:--;App...        SF   \n",
       "5167  Basement:Yes;Fireplaces:0;Roof:Asphalt/Fibergl...        SF   \n",
       "5168  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5169  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "5170  Basement:Yes;Fireplaces:1;Roof:Asphalt/Fibergl...        SF   \n",
       "\n",
       "               STREETNAME  HOUSENUM1  HOUSENUM2  \\\n",
       "4          Maple Ridge Rd         53         53   \n",
       "5            Jennings Way         27         27   \n",
       "6         HATHAWAY STREET         26         26   \n",
       "7         Sheffield Place          9          9   \n",
       "9             Marcelle St         88         88   \n",
       "10           Jerusalem Rd         84         84   \n",
       "11            Elmwood Ave         67         67   \n",
       "15         King Philip Rd         17         17   \n",
       "18            Chestnut St          2          2   \n",
       "19             Juniper Ln          6          6   \n",
       "20          Shoreline Way         27         27   \n",
       "23            Main Street         52         52   \n",
       "24          Sias Point Rd          4          4   \n",
       "28      Meeting Place Cir          6          6   \n",
       "29       Verna Hall Drive         38         38   \n",
       "30              Woburn St         73         73   \n",
       "33              Gibbs Ave         40         40   \n",
       "35            Bounty Lane          3          3   \n",
       "39           ACUSHNET AVE       3863       3863   \n",
       "40               Grove St        262        262   \n",
       "41            Phoenix Ter        128        128   \n",
       "44              Cooper Rd         36         36   \n",
       "45          Katie Ford Rd         40         40   \n",
       "46               Perry St          5          5   \n",
       "47              Maggie Ln         35         35   \n",
       "48           Park View Dr         30         30   \n",
       "49            Main street        264       264R   \n",
       "51          Ellisville Rd         17         17   \n",
       "52         Pine Ridge Rd.         29         29   \n",
       "54           Roosevelt Rd         29         29   \n",
       "...                   ...        ...        ...   \n",
       "5121         Greenwood St        107        107   \n",
       "5122        Porter Street          1          1   \n",
       "5124        Camden Street          7          7   \n",
       "5127     Lake Shore Drive        186        186   \n",
       "5130       Driscoll Drive         21         21   \n",
       "5131           Sherman Ct         24         24   \n",
       "5132         Wadsworth Rd        142        142   \n",
       "5134            Plain St.         46         46   \n",
       "5137          Wrentham Rd        151        151   \n",
       "5139                  Oak         52         52   \n",
       "5140         Johnswood Rd          5          5   \n",
       "5142           Brandon Rd         40         40   \n",
       "5143        Wilmington Rd         19         19   \n",
       "5146         Beechmont St         55         55   \n",
       "5148         Acushnet Ave       3759       3759   \n",
       "5149           Sunset Ave         63         63   \n",
       "5150       Old Essex Road         16         16   \n",
       "5152                River       3032      30-32   \n",
       "5158        Washington St        279        279   \n",
       "5159              Hill St        456        456   \n",
       "5160       Andover Street         66         66   \n",
       "5162  Riverboat Circle SW       5613       5613   \n",
       "5163    Brigham Farm Lane         19         19   \n",
       "5164          Cameron Way         40         40   \n",
       "5165            Center St        321        321   \n",
       "5166      Goldfinch Drive         55         55   \n",
       "5167            Wood Path         15         15   \n",
       "5168             Bay Lane        373        373   \n",
       "5169        Rounsevell Dr         17         17   \n",
       "5170          Pondview Rd         17         17   \n",
       "\n",
       "                                             PHOTOURL  \n",
       "4     http://media.mlspin.com/photo.aspx?mls=72124101  \n",
       "5     http://media.mlspin.com/photo.aspx?mls=72133120  \n",
       "6     http://media.mlspin.com/photo.aspx?mls=72148511  \n",
       "7     http://media.mlspin.com/photo.aspx?mls=72153413  \n",
       "9     http://media.mlspin.com/photo.aspx?mls=72166889  \n",
       "10    http://media.mlspin.com/photo.aspx?mls=72166942  \n",
       "11    http://media.mlspin.com/photo.aspx?mls=72171751  \n",
       "15    http://media.mlspin.com/photo.aspx?mls=72190912  \n",
       "18    http://media.mlspin.com/photo.aspx?mls=72193127  \n",
       "19    http://media.mlspin.com/photo.aspx?mls=72193631  \n",
       "20    http://media.mlspin.com/photo.aspx?mls=72195162  \n",
       "23    http://media.mlspin.com/photo.aspx?mls=72201730  \n",
       "24    http://media.mlspin.com/photo.aspx?mls=72202830  \n",
       "28    http://media.mlspin.com/photo.aspx?mls=72208801  \n",
       "29    http://media.mlspin.com/photo.aspx?mls=72209314  \n",
       "30    http://media.mlspin.com/photo.aspx?mls=72209351  \n",
       "33    http://media.mlspin.com/photo.aspx?mls=72214138  \n",
       "35    http://media.mlspin.com/photo.aspx?mls=72218526  \n",
       "39    http://media.mlspin.com/photo.aspx?mls=72222613  \n",
       "40    http://media.mlspin.com/photo.aspx?mls=72223668  \n",
       "41    http://media.mlspin.com/photo.aspx?mls=72223950  \n",
       "44    http://media.mlspin.com/photo.aspx?mls=72225332  \n",
       "45    http://media.mlspin.com/photo.aspx?mls=72225677  \n",
       "46    http://media.mlspin.com/photo.aspx?mls=72226124  \n",
       "47    http://media.mlspin.com/photo.aspx?mls=72227043  \n",
       "48    http://media.mlspin.com/photo.aspx?mls=72227923  \n",
       "49    http://media.mlspin.com/photo.aspx?mls=72228467  \n",
       "51    http://media.mlspin.com/photo.aspx?mls=72229218  \n",
       "52    http://media.mlspin.com/photo.aspx?mls=72229987  \n",
       "54    http://media.mlspin.com/photo.aspx?mls=72232572  \n",
       "...                                               ...  \n",
       "5121  http://media.mlspin.com/photo.aspx?mls=72286830  \n",
       "5122  http://media.mlspin.com/photo.aspx?mls=72286934  \n",
       "5124  http://media.mlspin.com/photo.aspx?mls=72287266  \n",
       "5127  http://media.mlspin.com/photo.aspx?mls=72287584  \n",
       "5130  http://media.mlspin.com/photo.aspx?mls=72287681  \n",
       "5131  http://media.mlspin.com/photo.aspx?mls=72287703  \n",
       "5132  http://media.mlspin.com/photo.aspx?mls=72287706  \n",
       "5134  http://media.mlspin.com/photo.aspx?mls=72287921  \n",
       "5137  http://media.mlspin.com/photo.aspx?mls=72287993  \n",
       "5139  http://media.mlspin.com/photo.aspx?mls=72288059  \n",
       "5140  http://media.mlspin.com/photo.aspx?mls=72288158  \n",
       "5142  http://media.mlspin.com/photo.aspx?mls=72288259  \n",
       "5143  http://media.mlspin.com/photo.aspx?mls=72288267  \n",
       "5146  http://media.mlspin.com/photo.aspx?mls=72289152  \n",
       "5148  http://media.mlspin.com/photo.aspx?mls=72289694  \n",
       "5149  http://media.mlspin.com/photo.aspx?mls=72289734  \n",
       "5150  http://media.mlspin.com/photo.aspx?mls=72289771  \n",
       "5152  http://media.mlspin.com/photo.aspx?mls=72290016  \n",
       "5158  http://media.mlspin.com/photo.aspx?mls=72291553  \n",
       "5159  http://media.mlspin.com/photo.aspx?mls=72291758  \n",
       "5160  http://media.mlspin.com/photo.aspx?mls=72291778  \n",
       "5162  http://media.mlspin.com/photo.aspx?mls=72292089  \n",
       "5163  http://media.mlspin.com/photo.aspx?mls=72292935  \n",
       "5164  http://media.mlspin.com/photo.aspx?mls=72293858  \n",
       "5165  http://media.mlspin.com/photo.aspx?mls=72294290  \n",
       "5166  http://media.mlspin.com/photo.aspx?mls=72297021  \n",
       "5167  http://media.mlspin.com/photo.aspx?mls=72298565  \n",
       "5168  http://media.mlspin.com/photo.aspx?mls=72298853  \n",
       "5169  http://media.mlspin.com/photo.aspx?mls=72299954  \n",
       "5170  http://media.mlspin.com/photo.aspx?mls=72301673  \n",
       "\n",
       "[3073 rows x 38 columns]"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset[(dataset.SOLDPRICE < 1000000) & (dataset.PROPTYPE == \"SF\")]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MLSNUM</th>\n",
       "      <th>LISTPRICE</th>\n",
       "      <th>SOLDPRICE</th>\n",
       "      <th>EXPIREDDATE</th>\n",
       "      <th>DOM</th>\n",
       "      <th>DTO</th>\n",
       "      <th>ZIP</th>\n",
       "      <th>BEDS</th>\n",
       "      <th>BATHS</th>\n",
       "      <th>SQFT</th>\n",
       "      <th>AGE</th>\n",
       "      <th>LOTSIZE</th>\n",
       "      <th>GARAGE</th>\n",
       "      <th>COOLING</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>5.171000e+03</td>\n",
       "      <td>5.171000e+03</td>\n",
       "      <td>5.171000e+03</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5171.000000</td>\n",
       "      <td>5171.000000</td>\n",
       "      <td>5171.000000</td>\n",
       "      <td>5171.000000</td>\n",
       "      <td>5171.000000</td>\n",
       "      <td>5171.000000</td>\n",
       "      <td>5171.000000</td>\n",
       "      <td>4.064000e+03</td>\n",
       "      <td>5171.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>7.225305e+07</td>\n",
       "      <td>4.807745e+05</td>\n",
       "      <td>4.765988e+05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>69.591762</td>\n",
       "      <td>48.977374</td>\n",
       "      <td>2062.584220</td>\n",
       "      <td>3.253336</td>\n",
       "      <td>2.031038</td>\n",
       "      <td>1883.277703</td>\n",
       "      <td>62.156256</td>\n",
       "      <td>4.236467e+04</td>\n",
       "      <td>0.865597</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.473714e+04</td>\n",
       "      <td>4.945971e+05</td>\n",
       "      <td>5.016361e+05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>92.763384</td>\n",
       "      <td>68.484702</td>\n",
       "      <td>1119.135051</td>\n",
       "      <td>1.604884</td>\n",
       "      <td>1.050722</td>\n",
       "      <td>1038.769455</td>\n",
       "      <td>54.095052</td>\n",
       "      <td>3.790374e+05</td>\n",
       "      <td>0.985542</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>7.115216e+07</td>\n",
       "      <td>1.990000e+04</td>\n",
       "      <td>2.300000e+04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>7.224754e+07</td>\n",
       "      <td>2.499000e+05</td>\n",
       "      <td>2.450000e+05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>1747.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1191.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>6.000000e+03</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>7.226724e+07</td>\n",
       "      <td>3.748000e+05</td>\n",
       "      <td>3.700000e+05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>2048.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1638.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>1.174600e+04</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>7.227533e+07</td>\n",
       "      <td>5.499000e+05</td>\n",
       "      <td>5.515000e+05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>2360.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>2300.000000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>2.570625e+04</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>7.230167e+07</td>\n",
       "      <td>1.050000e+07</td>\n",
       "      <td>1.511000e+07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1562.000000</td>\n",
       "      <td>938.000000</td>\n",
       "      <td>34452.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>11200.000000</td>\n",
       "      <td>1863.000000</td>\n",
       "      <td>1.868724e+07</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             MLSNUM     LISTPRICE     SOLDPRICE  EXPIREDDATE          DOM  \\\n",
       "count  5.171000e+03  5.171000e+03  5.171000e+03          0.0  5171.000000   \n",
       "mean   7.225305e+07  4.807745e+05  4.765988e+05          NaN    69.591762   \n",
       "std    4.473714e+04  4.945971e+05  5.016361e+05          NaN    92.763384   \n",
       "min    7.115216e+07  1.990000e+04  2.300000e+04          NaN     0.000000   \n",
       "25%    7.224754e+07  2.499000e+05  2.450000e+05          NaN    18.000000   \n",
       "50%    7.226724e+07  3.748000e+05  3.700000e+05          NaN    35.000000   \n",
       "75%    7.227533e+07  5.499000e+05  5.515000e+05          NaN    94.000000   \n",
       "max    7.230167e+07  1.050000e+07  1.511000e+07          NaN  1562.000000   \n",
       "\n",
       "               DTO           ZIP         BEDS        BATHS          SQFT  \\\n",
       "count  5171.000000   5171.000000  5171.000000  5171.000000   5171.000000   \n",
       "mean     48.977374   2062.584220     3.253336     2.031038   1883.277703   \n",
       "std      68.484702   1119.135051     1.604884     1.050722   1038.769455   \n",
       "min       0.000000    101.000000     0.000000     0.000000      0.000000   \n",
       "25%       6.000000   1747.000000     2.000000     1.500000   1191.000000   \n",
       "50%      20.000000   2048.000000     3.000000     2.000000   1638.000000   \n",
       "75%      73.000000   2360.000000     4.000000     2.500000   2300.000000   \n",
       "max     938.000000  34452.000000    32.000000    32.000000  11200.000000   \n",
       "\n",
       "               AGE       LOTSIZE       GARAGE  COOLING  \n",
       "count  5171.000000  4.064000e+03  5171.000000      0.0  \n",
       "mean     62.156256  4.236467e+04     0.865597      NaN  \n",
       "std      54.095052  3.790374e+05     0.985542      NaN  \n",
       "min       0.000000  0.000000e+00     0.000000      NaN  \n",
       "25%      27.000000  6.000000e+03     0.000000      NaN  \n",
       "50%      54.000000  1.174600e+04     1.000000      NaN  \n",
       "75%      98.000000  2.570625e+04     2.000000      NaN  \n",
       "max    1863.000000  1.868724e+07     9.000000      NaN  "
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<pandas.core.groupby.groupby.DataFrameGroupBy object at 0x11d2d2ef0>"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped_by_type = dataset.groupby(\"PROPTYPE\")\n",
    "grouped_by_type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"8\" halign=\"left\">AGE</th>\n",
       "      <th colspan=\"2\" halign=\"left\">BATHS</th>\n",
       "      <th>...</th>\n",
       "      <th colspan=\"2\" halign=\"left\">SQFT</th>\n",
       "      <th colspan=\"8\" halign=\"left\">ZIP</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>...</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PROPTYPE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>CC</th>\n",
       "      <td>1444.0</td>\n",
       "      <td>49.587950</td>\n",
       "      <td>53.831568</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>1019.0</td>\n",
       "      <td>1444.0</td>\n",
       "      <td>1.745845</td>\n",
       "      <td>...</td>\n",
       "      <td>1634.0</td>\n",
       "      <td>5344.0</td>\n",
       "      <td>1444.0</td>\n",
       "      <td>2106.023546</td>\n",
       "      <td>1255.649965</td>\n",
       "      <td>1001.0</td>\n",
       "      <td>1852.00</td>\n",
       "      <td>2118.0</td>\n",
       "      <td>2169.0</td>\n",
       "      <td>33909.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MF</th>\n",
       "      <td>484.0</td>\n",
       "      <td>108.140496</td>\n",
       "      <td>29.322242</td>\n",
       "      <td>5.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>113.0</td>\n",
       "      <td>118.0</td>\n",
       "      <td>283.0</td>\n",
       "      <td>484.0</td>\n",
       "      <td>2.927686</td>\n",
       "      <td>...</td>\n",
       "      <td>3345.0</td>\n",
       "      <td>11200.0</td>\n",
       "      <td>484.0</td>\n",
       "      <td>1997.479339</td>\n",
       "      <td>501.901793</td>\n",
       "      <td>1007.0</td>\n",
       "      <td>1610.75</td>\n",
       "      <td>2122.0</td>\n",
       "      <td>2301.0</td>\n",
       "      <td>2919.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SF</th>\n",
       "      <td>3243.0</td>\n",
       "      <td>60.889608</td>\n",
       "      <td>53.487955</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>1863.0</td>\n",
       "      <td>3243.0</td>\n",
       "      <td>2.024206</td>\n",
       "      <td>...</td>\n",
       "      <td>2376.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>3243.0</td>\n",
       "      <td>2052.958680</td>\n",
       "      <td>1120.909478</td>\n",
       "      <td>101.0</td>\n",
       "      <td>1605.00</td>\n",
       "      <td>1982.0</td>\n",
       "      <td>2370.0</td>\n",
       "      <td>34452.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows × 112 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             AGE                                                          \\\n",
       "           count        mean        std  min   25%    50%    75%     max   \n",
       "PROPTYPE                                                                   \n",
       "CC        1444.0   49.587950  53.831568  0.0  11.0   32.0   93.0  1019.0   \n",
       "MF         484.0  108.140496  29.322242  5.0  98.0  113.0  118.0   283.0   \n",
       "SF        3243.0   60.889608  53.487955  0.0  30.0   57.0   82.0  1863.0   \n",
       "\n",
       "           BATHS             ...       SQFT              ZIP               \\\n",
       "           count      mean   ...        75%      max   count         mean   \n",
       "PROPTYPE                     ...                                            \n",
       "CC        1444.0  1.745845   ...     1634.0   5344.0  1444.0  2106.023546   \n",
       "MF         484.0  2.927686   ...     3345.0  11200.0   484.0  1997.479339   \n",
       "SF        3243.0  2.024206   ...     2376.0  10000.0  3243.0  2052.958680   \n",
       "\n",
       "                                                                 \n",
       "                  std     min      25%     50%     75%      max  \n",
       "PROPTYPE                                                         \n",
       "CC        1255.649965  1001.0  1852.00  2118.0  2169.0  33909.0  \n",
       "MF         501.901793  1007.0  1610.75  2122.0  2301.0   2919.0  \n",
       "SF        1120.909478   101.0  1605.00  1982.0  2370.0  34452.0  \n",
       "\n",
       "[3 rows x 112 columns]"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.groupby(\"PROPTYPE\").describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MLSNUM</th>\n",
       "      <th>LISTPRICE</th>\n",
       "      <th>SOLDPRICE</th>\n",
       "      <th>EXPIREDDATE</th>\n",
       "      <th>DOM</th>\n",
       "      <th>DTO</th>\n",
       "      <th>ZIP</th>\n",
       "      <th>BEDS</th>\n",
       "      <th>BATHS</th>\n",
       "      <th>SQFT</th>\n",
       "      <th>AGE</th>\n",
       "      <th>LOTSIZE</th>\n",
       "      <th>GARAGE</th>\n",
       "      <th>COOLING</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PROPTYPE</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>CC</th>\n",
       "      <td>7.225364e+07</td>\n",
       "      <td>512072.209661</td>\n",
       "      <td>515437.729363</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54.799169</td>\n",
       "      <td>39.804017</td>\n",
       "      <td>2106.023546</td>\n",
       "      <td>2.087258</td>\n",
       "      <td>1.745845</td>\n",
       "      <td>1328.087950</td>\n",
       "      <td>49.587950</td>\n",
       "      <td>109587.963056</td>\n",
       "      <td>0.542244</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MF</th>\n",
       "      <td>7.225119e+07</td>\n",
       "      <td>498397.169421</td>\n",
       "      <td>493278.811983</td>\n",
       "      <td>NaN</td>\n",
       "      <td>55.506198</td>\n",
       "      <td>41.280992</td>\n",
       "      <td>1997.479339</td>\n",
       "      <td>6.121901</td>\n",
       "      <td>2.927686</td>\n",
       "      <td>2891.136364</td>\n",
       "      <td>108.140496</td>\n",
       "      <td>8466.673120</td>\n",
       "      <td>0.520661</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SF</th>\n",
       "      <td>7.225306e+07</td>\n",
       "      <td>464208.570802</td>\n",
       "      <td>456815.676056</td>\n",
       "      <td>NaN</td>\n",
       "      <td>78.280604</td>\n",
       "      <td>54.210607</td>\n",
       "      <td>2052.958680</td>\n",
       "      <td>3.344434</td>\n",
       "      <td>2.024206</td>\n",
       "      <td>1980.067838</td>\n",
       "      <td>60.889608</td>\n",
       "      <td>40438.179158</td>\n",
       "      <td>1.061055</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                MLSNUM      LISTPRICE      SOLDPRICE  EXPIREDDATE        DOM  \\\n",
       "PROPTYPE                                                                       \n",
       "CC        7.225364e+07  512072.209661  515437.729363          NaN  54.799169   \n",
       "MF        7.225119e+07  498397.169421  493278.811983          NaN  55.506198   \n",
       "SF        7.225306e+07  464208.570802  456815.676056          NaN  78.280604   \n",
       "\n",
       "                DTO          ZIP      BEDS     BATHS         SQFT         AGE  \\\n",
       "PROPTYPE                                                                        \n",
       "CC        39.804017  2106.023546  2.087258  1.745845  1328.087950   49.587950   \n",
       "MF        41.280992  1997.479339  6.121901  2.927686  2891.136364  108.140496   \n",
       "SF        54.210607  2052.958680  3.344434  2.024206  1980.067838   60.889608   \n",
       "\n",
       "                LOTSIZE    GARAGE  COOLING  \n",
       "PROPTYPE                                    \n",
       "CC        109587.963056  0.542244      NaN  \n",
       "MF          8466.673120  0.520661      NaN  \n",
       "SF         40438.179158  1.061055      NaN  "
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.groupby(\"PROPTYPE\").mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "TODO: http://pandas.pydata.org/pandas-docs/stable/merging.html"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Sklearn"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Sklearn provides simple and efficient tools for data mining and data analysis. It is accessible to everybody, and reusable in various contexts. Built on NumPy, SciPy, and matplotlib.\n",
    "\n",
    "Open source, commercially usable - BSD license. Take a look at: http://scikit-learn.org/stable/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load tools from sklearn library\n",
    "\n",
    "from sklearn import datasets, linear_model\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "\n",
    "regr = linear_model.LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Orginal shape\n",
      "(5171, 5) (5171,)\n",
      "\n",
      "Train shape\n",
      "(4000, 5) (4000,)\n",
      "\n",
      "Test shape\n",
      "(1171, 5) (1171,)\n",
      "Variance score: 0.02\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Run Linear Regresison \n",
    "# Use features: 'BEDS', 'BATHS', 'SQFT', 'AGE', 'LOTSIZE'\n",
    "\n",
    "prices = dataset['SOLDPRICE']\n",
    "features = dataset[['BEDS', 'BATHS', 'SQFT', 'AGE', 'LOTSIZE']]\n",
    "\n",
    "print (\"Orginal shape\")\n",
    "print (features.shape, prices.shape)\n",
    "print ()\n",
    "\n",
    "features = features.fillna(-9999)\n",
    "\n",
    "# Split data using the above example\n",
    "features_train = features[:4000]\n",
    "features_test = features[4000:]\n",
    "\n",
    "# Split the targets into training/testing sets\n",
    "prices_train = prices[:4000]\n",
    "prices_test = prices[4000:]\n",
    "\n",
    "print (\"Train shape\")\n",
    "print (features_train.shape, prices_train.shape)\n",
    "print ()\n",
    "\n",
    "print (\"Test shape\")\n",
    "print (features_test.shape, prices_test.shape)\n",
    "\n",
    "regr.fit(features_train, prices_train)\n",
    "\n",
    "# Make predictions using the testing set\n",
    "prices_pred = regr.predict(features_test)\n",
    "\n",
    "# Explained variance score: 1 is perfect prediction\n",
    "print('Variance score: %.2f' % r2_score(prices_test, prices_pred))\n",
    "\n",
    "# Plot outputs\n",
    "plt.figure(figsize=(20, 5))\n",
    "plt.scatter(prices_test, prices_pred, color='black')\n",
    "plt.plot([prices_test.min(), prices_test.max()], [prices_test.min(), prices_test.max()], 'k--', lw=4, color='blue')\n",
    "\n",
    "plt.ylabel('Predicted')\n",
    "plt.xlabel('Measured')\n",
    "\n",
    "plt.xticks(())\n",
    "plt.yticks(())\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Residual plot\n",
    "\n",
    "plt.figure(figsize=(10, 7))\n",
    "\n",
    "resid = prices_test - regr.predict(features_test)\n",
    "\n",
    "plt.axhline(y=0, linestyle='-', linewidth=2, color=\"r\")\n",
    "plt.scatter(x=prices_pred, y=resid, alpha=0.5, s=3)\n",
    "\n",
    "plt.title(\"Residual plot\")\n",
    "plt.ylabel(r\"Y-$\\hat Y$\")\n",
    "plt.xlabel(r'$\\hat Y$')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      BEDS  BATHS  SQFT  AGE   LOTSIZE\n",
      "4000     4    2.5  3005   15   17903.0\n",
      "4001     4    2.5  1800   12   16552.0\n",
      "4002     3    1.0   869  112    8000.0\n",
      "4003     3    2.5  1536   39  118919.0\n",
      "4004     4    2.5  3422   23   33105.0\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([662011.5])"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##########################\n",
    "# Predict price based on a set of input values\n",
    "\n",
    "print(features_test.head())\n",
    "regr.predict([[4, 2.5, 3005, 15, 17903.0]]).round(1) ### <---- Very important!!!!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['regr.pkl']"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Export model\n",
    "\n",
    "from sklearn.externals import joblib\n",
    "joblib.dump(regr, 'regr.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [],
   "source": [
    "######################################################################################################################"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Assigment Part 1: Modeling (5 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 255,
   "metadata": {},
   "outputs": [],
   "source": [
    "# YOUR TURN\n",
    "# Use categorical variables \n",
    "import pandas as pd\n",
    "\n",
    "x = dataset.iloc[: , [2, 12, 15, 26]].values\n",
    "y = dataset.iloc[: , 3].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "metadata": {},
   "outputs": [],
   "source": [
    "# YOUR TURN\n",
    "# Use sklearn train|test|split\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "xTrain, xTest, yTrain, yTest = train_test_split(x, y, test_size = 0.2, random_state = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Variance score: 0.79\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# YOUR TURN\n",
    "# Run DecisionTreeRegressor\n",
    "# HINT: https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeRegressor.html\n",
    "\n",
    "\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "regressor = DecisionTreeRegressor(random_state = 0)\n",
    "regressor.fit(xTrain, yTrain)\n",
    "\n",
    "yPred = regressor.predict(xTest)\n",
    "\n",
    "print('Variance score: %.2f' % r2_score(yTest, yPred))\n",
    "\n",
    "from sklearn.model_selection import cross_val_predict\n",
    "plt.figure(figsize=(20, 5))\n",
    "plt.scatter(yTest, yPred, color='blue')\n",
    "plt.plot([yTest.min(), yTest.max()], [yTest.min(), yTest.max()], 'k--', lw=4, color='red')\n",
    "\n",
    "plt.ylabel('Predicted')\n",
    "plt.xlabel('Measured')\n",
    "\n",
    "plt.xticks(())\n",
    "plt.yticks(())\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# YOUR TURN\n",
    "# Residual Plot\n",
    "\n",
    "plt.figure(figsize=(10, 7))\n",
    "\n",
    "resid = yTest - regressor.predict(xTest)\n",
    "\n",
    "plt.axhline(y=0, linestyle='-', linewidth=2, color=\"red\")\n",
    "plt.scatter(x=yPred, y=resid, alpha=0.5, s=3)\n",
    "\n",
    "plt.title(\"Residual plot\")\n",
    "plt.ylabel(r\"Y-$\\hat Y$\")\n",
    "plt.xlabel(r'$\\hat Y$')\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Optional: Extra Credit Question (3 pts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Run one of the ensemble methods presented in class\n",
    "- Parameter tuning via CV GridSearch"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Assigment Part 2: App (5 pts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([23000.])"
      ]
     },
     "execution_count": 267,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regressor.predict([[5, 100, 5000, 52]]).round(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['regressor.pkl']"
      ]
     },
     "execution_count": 268,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Export model\n",
    "\n",
    "from sklearn.externals import joblib\n",
    "joblib.dump(regr, 'regressor.pkl')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Use the **final** folders/files structure from the last week's lab. Check **both** pdf documents. By now, you should have:\n",
    "\n",
    "<img src='lab2_folder_struct.png' align='left'>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Your task is to replace h2 \"Index Block Content\" with the price predicted from the regresion model. Please, follow these steps:\n",
    "\n",
    "1. Check the above cell to see how to export \".pkl\" model. Store \".pkl\" file next to your \"routes.py\"\n",
    "2. Check the above cell to see how to predict price based on a set of input values\n",
    "3. Go to your \"routes.py\". Inside index() function create the variable \"prediction\" and store the value from the step number 2 in it.\n",
    "4. Convert stored value to a string and change your return argument to look like:"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "return render_template(\"index.html\", prediction=prediction)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, change your main function. It should look like this:"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "if __name__ == '__main__':\n",
    "    model = joblib.load('name_of_YOUR_pkl_model')\n",
    "    app.run(debug=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Replace h2 \"Index Block Content\" with predicted price, using Jinja expression {{....}} to print to template output. The result should look like this (note: due to random train/test/split or random input, figures might vary):"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src='final_output.png' align='left'>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Publish your App project using Heroku."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Optional: Extra Credit Question (1 pt)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Find a specific numpy function that removes square brackes surrounding the predicted price"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
